<?php

namespace Wenwen\FrontendBundle\Services;

use Doctrine\ORM\EntityManager;
use Jili\ApiBundle\Entity\QQUser;
use Jili\ApiBundle\Entity\User;
use Jili\ApiBundle\Entity\WeiBoUser;
use Jili\ApiBundle\Entity\WeixinUser;
use Wenwen\FrontendBundle\Entity\CategoryType;
use Wenwen\FrontendBundle\Entity\TaskType;

class UserService
{
    private $em;

    public function __construct(EntityManager $em) {
        $this->em = $em;
    }

    /**
     * @param $xUser QQUser|WeixinUser|WeiBoUser
     * @param $userProfile
     * @param $clientIp
     * @param $userAgent
     * @return User
     * @throws \Doctrine\DBAL\ConnectionException
     * @throws \Exception
     */
    public function createAutoGeneratedUser($xUser, $userProfile, $clientIp, $userAgent) {
        $this->em->getConnection()->beginTransaction();
        try {
            $user = new User();
            $user->setNick($xUser->getNickname());
            $user->setPoints(User::POINT_SIGNUP);
            $user->setIconPath($xUser->getPhoto());
            $user->setRegisterCompleteDate(new \DateTime());
            $user->setLastLoginDate(new \DateTime());
            $user->setLastLoginIp($xUser->getClientIp());
            $user->setCreatedRemoteAddr($clientIp);
            $user->setCreatedUserAgent($userAgent);
            $this->em->persist($user);

            $userProfile->setUser($user);
            $this->em->persist($userProfile);

            $xUser->setUser($user);

            $this->em->flush();
            $this->em->getConnection()->commit();

        } catch (\Exception $e) {
            $this->em->getConnection()->rollBack();
            $this->em->close();
            throw $e;
        }

        return $user;
    }

    public function addPoints(User $user) {
        $this->em->getConnection()->beginTransaction();
        try {
            $classPointHistory = 'Jili\ApiBundle\Entity\PointHistory0'. ($user->getId() % 10);
            $pointHistory = new $classPointHistory();
            $pointHistory->setUserId($user->getId());
            $pointHistory->setPointChangeNum(User::POINT_SIGNUP);
            $pointHistory->setReason(CategoryType::SOP_EXPENSE);
            $this->em->persist($pointHistory);

            $classTaskHistory = 'Jili\ApiBundle\Entity\TaskHistory0'. ($user->getId() % 10);
            $taskHistory = new $classTaskHistory();
            $taskHistory->setUserid($user->getId());
            $taskHistory->setOrderId(0);
            $taskHistory->setOcdCreatedDate(new \DateTime());
            $taskHistory->setCategoryType(CategoryType::SOP_EXPENSE);
            $taskHistory->setTaskType(TaskType::RENTENTION);
            $taskHistory->setTaskName('完成注册');
            $taskHistory->setDate(new \DateTime());
            $taskHistory->setPoint(User::POINT_SIGNUP);
            $taskHistory->setStatus(1);
            $this->em->persist($taskHistory);

            $this->em->flush();
            $this->em->getConnection()->commit();

        } catch (\Exception $e) {
            $this->em->getConnection()->rollBack();
            $this->em->close();
            throw $e;
        }
    }

    public function getProvinces() {
        return $this->em->getRepository('JiliApiBundle:ProvinceList')->findAll();
    }

    public function getCities() {
        return $this->em->getRepository('JiliApiBundle:CityList')->findAll();
    }
}